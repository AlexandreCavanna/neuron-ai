<?php

namespace NeuronAI\Tools;

interface ToolInterface
{
    /**
     * Get the unique name of the tool.
     */
    public function getName(): string;

    /**
     * Get a description of the tool's functionality.
     */
    public function getDescription(): string;

    /**
     * Add a Property with a name, type, description, and optional required constraint.
     */
    public function addProperty(ToolProperty $property): self;

    /**
     * Get the Properties schema.
     */
    public function getProperties(): array;

    /**
     * Names of the required properties.
     *
     * @return array
     */
    public function getRequiredProperties(): array;

    /**
     * Define the code to be executed.
     *
     * @param callable $callback
     * @return mixed
     */
    public function setCallable(callable $callback): self;

    /**
     * Get the input arguments of the function call.
     */
    public function getInputs(): array;

    /**
     * Get the input arguments of the function call.
     */
    public function setInputs(array $inputs): self;

    /**
     * The call identifier generated by the LLM.
     * @return string
     */
    public function getCallId(): string;


    public function setCallId(string $callId): self;


    public function getResult(): mixed;

    /**
     * Execute the tool's logic with input parameters.
     */
    public function execute(): void;
}
